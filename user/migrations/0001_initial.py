# Generated by Django 4.2 on 2023-05-08 06:55

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(default='email@gmail.com', max_length=60)),
                ('username', models.CharField(max_length=20)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('user_id', models.CharField(max_length=20, unique=True)),
                ('phone', models.CharField(max_length=11, null=True, unique=True)),
                ('point', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('cafe_id', models.CharField(blank=True, default='', max_length=50)),
                ('type', models.CharField(choices=[('CUSTOMERUSER', 'Customeruser'), ('OWNERUSER', 'Owneruser')], max_length=15)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomerUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.user',),
            managers=[
                ('objects', user.models.CustomerUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='OwnerUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.user',),
            managers=[
                ('objects', user.models.OwnerUserManager()),
            ],
        ),
    ]
